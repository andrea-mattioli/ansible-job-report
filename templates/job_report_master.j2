<html>
<head>
  <!-- Viewport options can make the page scale better on mobile -->
  <meta name="viewport" content="width=device-width, initial-scale=1">

  <style>
  <!-- CSS styling for our HTML report -->
  {% include './stylesheet.css.j2' %}
  </style>

</head>

<body>

  <!-- This is our left-hand menu and navigation bar.
  We will generate links for each host, breaking them up by job status. 
  The color / style for failed and missing hosts can be tuned in playbook vars. -->

  <div class="sidenav">
    <p><a style="text-align:center;font-weight:bold;font-size:medium" href="#summary">Summary</a></p>
    <hr>
    <p>Host Results</p>
    {% for item in ansible_play_hosts_all | sort %}
    <a {% if item in hostvars['localhost']['failed_list'] %}style="{{ failed_style }}"{% elif item in hostvars['localhost']['missing_list'] %}style="{{ missing_style }}"{% endif %} href="#{{ item }}">{{ item }}</a>
    {% endfor %}
    <hr>
    <p>Missing Hosts</p>
    {% for item in hostvars['localhost']['missing_list'] %}
      <a href="#{{ item }}">{{ item }}</a>
    {% endfor %}
    <hr>
    <p>Failed Hosts</p>
    {% for item in hostvars['localhost']['failed_list'] %}
    <a href="#{{ item }}">{{ item }}</a>
    {% endfor %}
  </div>

  <div class="content">

    <h1 id="top">Job Status Report</h1>
    <p><i>Job started {{ hostvars['localhost']['date_str_pretty'] }}</i></p>
    <hr>

    <h1 id="summary">Summary</h1>

    <p><strong>Host Totals:</strong></p>
      <ul>
        <li>Successful: {{ hostvars['localhost']['success_list']|length }} </li>
        <li>Failed: {{ hostvars['localhost']['failed_list']|length }} </li>
        <li>Missing: {{ hostvars['localhost']['missing_list']|length }} </li>
        <li>Total: {{ hostvars['localhost']['success_list']|length + hostvars['localhost']['failed_list']|length + hostvars['localhost']['missing_list']|length }}</li>
      </ul>

    <!-- This is a neat trick. We saved a de-duplicated list of kernels across all hosts, as 'kernels_list'. -->
    <!-- We use json_query to group the hosts by kernel version. This helps us identify stragglers from host patching. -->

    <!-- Now we loop through the hosts in our play, and generate per-host report fragments.-->
    <!-- Using loop variable 'thehost' to avoid clobbering with 'items'. -->
    {% for thehost in ansible_play_hosts_all | sort %}
      {% include './job_report_host.j2' %}
    {% endfor %}
    
    <p><strong>Recap Table:</strong></p>
    <table style="width:auto;text-align:left;background: #f9f9f9 none repeat scroll 0 0;">
    <tr>
    <th>HOSTNAME</th>
    <th>IP addresses</th>
    <th>OS</th>
    <th>CPU</th>
    <th>RAM</th>
    <th>TYPE</th>
    </tr>
      {% for thehost in hostvars['localhost']['success_list'] | sort %}
      <tr>
      <td>{{ hostvars[thehost]['inventory_hostname'] }}</td>
      <td>{{ hostvars[thehost]['ansible_all_ipv4_addresses'] | d(['unknown']) | join(', ') }}</td>
      <td>{{ hostvars[thehost]['ansible_distribution'] | default('N/A') }} {{ hostvars[thehost]['ansible_distribution_version'] | default('N/A') }}</td>
      <td>{{ hostvars[thehost]['ansible_processor_vcpus'] | d(['N/A']) }}</td>
      <td>{{ hostvars[thehost]['ansible_memtotal_mb'] | d(['N/A']) }} MB</td>
      <td>{{ ( hostvars[thehost]['ansible_virtualization_role'] == 'host' ) | ternary ('Physical','Virtual', 'N/A') }}</td>
      </tr>
      {% endfor %}
    </table>

    <hr>
    <p><i>Generated by Ansible playbook <strong>{{ playbook_dir }}/job_report.yaml</strong></i></p>
  
  </div>


</body>

</html>